[project]
name = "rh-aws-saml-login"
version = "0.8.1"
description = "A CLI tool that allows you to log in and retrieve AWS temporary credentials using Red Hat SAML IDP"
authors = [{ name = "Christian Assing", email = "cassing@redhat.com" }]
license = { text = "MIT License" }
readme = "README.md"
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">= 3.11"
dependencies = [
    "boto3>=1.35.33",
    "humanize>=4.10.0",
    "iterfzf>=1.4.0.54.3",
    "pyquery>=2.0.1",
    "requests-kerberos>=0.15.0",
    "rich>=13.9.1",
    "typer>=0.12.5",
    "tzlocal>=5.2",
]


[dependency-groups]
dev = [
    "mypy>=1.13",
    "pytest>=8.3.3",
    "requests-mock>=1.12.1",
    "ruff>=0.8.0",
    "types-requests>=2.32.0.20240914",
    "uv>=0.5.0",
]

[project.urls]
homepage = "https://github.com/app-sre/rh-aws-saml-login"
repository = "https://github.com/app-sre/rh-aws-saml-login"
documentation = "https://github.com/app-sre/rh-aws-saml-login"
issues = "https://github.com/app-sre/rh-aws-saml-login/issues"
changelog = "https://github.com/app-sre/rh-aws-saml-login/blob/main/CHANGELOG.md"

[project.scripts]
rh-aws-saml-login = 'rh_aws_saml_login.__main__:app'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["rh_aws_saml_login"]


[tool.hatch.build.targets.wheel]
only-include = ["rh_aws_saml_login"]

[tool.ruff]
line-length = 88
target-version = 'py311'
src = ["rh_aws_saml_login"]
extend-exclude = [".local", ".cache"]
fix = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "CPY",     # Missing copyright header
    "D107",    # Missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D211",    # No blank lines allowed before class docstring
    "D212",    # multi-line-summary-first-line
    "D213",    # multi-line-summary-second-line
    "D4",      # Doc string style
    "E501",    # Line too long
    "PLR0913", # Too many arguments in function definition
    "S101",    # Use of assert detected. Pytest uses assert
    "S404",    # subprocess import
    "TRY300",  # try-consider-else
    # pydoclint
    "DOC",
    # May conflict with the formatter, https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q",
    "COM812",
    "COM819",
    "ISC001",
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["rh_aws_saml_login"]

[tool.mypy]
files = ["rh_aws_saml_login"]
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true


[[tool.mypy.overrides]]
# Below are all of the packages that don't implement stub packages. Mypy will throw an error if we don't ignore the
# missing imports. See: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
module = [
    "requests_kerberos.*",
    "iterfzf.*",
    "botocore.*",
    "boto3.*",
    "pyquery.*",
]
ignore_missing_imports = true
